import React, { useState } from 'react';
import { JobSeekerFlow, RecruiterFlow, NetworkerFlow } from '../components/onboarding';

/**
 * ProfileSetup Component
 * Main component for user onboarding that redirects to the appropriate flow
 * based on the selected profile type.
 */
const ProfileSetup = () => {
  // Initial profile type selection
  const [profileType, setProfileType] = useState('');
  
  // Selection options
  const profileOptions = [
    {
      type: 'Job Seeker',
      description: 'I\'m looking for a job or career change'
    },
    {
      type: 'Recruiter (Companies Only)',
      description: 'I\'m recruiting for my company'
    },
    {
      type: 'Networking (Founder, Investor)',
      description: 'I\'m looking to connect with other professionals'
    }
  ];
  
  // Render profile type selection
  const renderProfileSelection = () => (
    <div className="min-h-screen bg-gray-50 py-12">
      <div className="max-w-3xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="bg-white rounded-lg shadow-lg p-6 md:p-8">
          <h1 className="text-2xl font-bold text-gray-900 mb-6 text-center">
            What brings you to our platform?
          </h1>
          
          <div className="space-y-4">
            <p className="text-gray-600 text-center mb-8">
              Select your primary goal to help us personalize your experience
            </p>
            
            <div className="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3">
              {profileOptions.map((option) => (
                <div
                  key={option.type}
                  onClick={() => setProfileType(option.type)}
                  className={`
                    p-6 border rounded-lg cursor-pointer transition-all
                    ${profileType === option.type
                      ? 'border-blue-500 bg-blue-50'
                      : 'border-gray-300 hover:border-blue-300'}
                  `}
                >
                  <div className="flex items-center mb-4">
                    <div className={`
                      w-5 h-5 rounded-full border flex items-center justify-center
                      ${profileType === option.type ? 'border-blue-500' : 'border-gray-400'}
                    `}>
                      {profileType === option.type && (
                        <div className="w-3 h-3 rounded-full bg-blue-500"></div>
                      )}
                    </div>
                    <span className="ml-2 font-medium">{option.type}</span>
                  </div>
                  <p className="text-sm text-gray-600">
                    {option.description}
                  </p>
                </div>
              ))}
            </div>
            
            <div className="mt-8 flex justify-center">
              <button
                type="button"
                onClick={() => {/* Profile type already set by clicking the option */}}
                disabled={!profileType}
                className={`
                  px-6 py-3 border border-transparent rounded-md shadow-sm
                  text-base font-medium text-white bg-blue-600 hover:bg-blue-700
                  focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500
                  ${!profileType ? 'opacity-50 cursor-not-allowed' : ''}
                `}
              >
                Continue
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
  
  // Render the appropriate flow based on profile type
  const renderFlowByType = () => {
    switch (profileType) {
      case 'Job Seeker':
        return <JobSeekerFlow />;
      case 'Recruiter (Companies Only)':
        return <RecruiterFlow />;
      case 'Networking (Founder, Investor)':
        return <NetworkerFlow />;
      default:
        return renderProfileSelection();
    }
  };
  
  return renderFlowByType();
};

export default ProfileSetup; 